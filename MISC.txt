cgictrl ver.0.1 2009.07.07 Masahiko Ito <m-ito@myh.no-ip.org>

一般的なCGIプログラムの動作
===========================

                     +-----------+  会話処理の最初はhtmlファイルの<form>から
                     | 入力 Form |  始まる。最初の入力Form自体をCGIで作成する
                     |  (HTML)   |  場合もある。
                     +-----+-----+
                           |
+---------+     表示       |
|         +<---------------+
| Browser |
|         +----------------+
+---------+  入力 & 起動   |
                           |
                           V
                     +-----+-----+  起動するCGIは上記入力Formの
                     |    CGI    |  <form action="...">で指定される。
                     |+---------+|
                     ||         ||  処理の内容は大きく
                     ||入力処理 ||
                     ||         ||  o [入力処理] : formからの入力データに基づ
                     |+---------+|    き、処理を行う部分。
                     |           |  o [画面作成] : 上記の処理結果を表示し、次
                     |           |    に起動するCGIを決定する部分。
                     |+---------+|
                     ||         ||  に分けられる。
                     ||画面作成 ||
                     ||         ||
                     |+---------+|
                     +-----+-----+
                           |
+---------+     表示       |
|         +<---------------+
| Browser |
|         +----------------+
+---------+  入力 & 起動   |
                           |
                           V
                     +-----+-----+
                     |    CGI    |  入力の処理結果により、展開先画面が分かれ
                     |+---------+|  る場合、1本のCGI中に複数の[画面作成]ロジッ
                     ||         ||  クが組み込まれる事になったり、同一画面の
                     ||入力処理 ||  作成ロジックが複数のCGIに組み込まれたりし
                     ||         ||  てメンテナンス性が悪くなる。
                     |+---------+|
                     |           |
                     |           +----------------------------------------
                     |+---------+ +---------+ +---------+ +---------+
                     ||         | |         | |         | |         |
                     ||画面作成 | |画面作成 | |画面作成 | |画面作成 | ...
                     ||   (A)   | |   (B)   | |   (C)   | |   (D)   |
                     |+---------+ +---------+ +---------+ +---------+
                     +-----+----------------------------------------------
                           |
+---------+                |
|         +<---------------+
| Browser |
|         +----------------+
+---------+                |
                           |
                           V
                           :
                           :

cgictrlを利用したCGIプログラムの動作
====================================

                     +-----------+  会話処理の最初は、初期トランザクションを指定
                     |cgictrl.cgi|  したcgictrl.cgiへのリンクを呼び出す事で開始
                     |起動用HTML |  する。
                     +-----+-----+
                           |      
                           |  ex. http://anywhere/cgictrl.cgi?SYS_init_tran=初期トラン
                           |      
                           |        以降、ブラウザが直接起動するCGIは常に cgictrl.cgi
+---------+     表示       |        となる。
|         +<---------------+
| Browser |
|         +----------------+
+---------+     起動       |
                           |
                           V
                     +-----+-----+  初期トランザクションを指定して起動された
                     |cgictrl.cgi|  cgictrl.cgiは[入力処理CGI]の起動を行わない。
                     |+---------+|
                     ||         ||
                     ||         ||
                     |+---------+|
                     |           |
                     |           |  cgictrl.cgiの[起動制御]が SYS_init_tran
                     |           |  により指定されたトランザクションを判断し、
                     |           |  適切な[画面作成CGI]を起動する。
                     |[起動制御] |
                     |     |     |   起動
                     |+----+----++---------->+---------+
                     ||画面作成 ||           |画面作成 |->次回に起動するトラン
                     || CGI起動 ||           |   CGI   |  ザクションをサーバ側
                     |+---------++<----------+---------+  に保存する。
                     +-----+-----+
                           |
+---------+     表示       |
|         +<---------------+
| Browser |
|         +----------------+
+---------+  入力 & 起動   |
                           |
                           V
                     +-----+-----+  cgictrl.cgiの[起動制御]がサーバ側に保存され
                     |cgictrl.cgi|  たトランザクションを判断し、適切な[入力処理
                     |           |  CGI]を起動する。
                     |[起動制御] |
                     |     |     |   起動
                     |+----+----++---------->+---------+
                     ||入力処理 ||           |入力処理 |->次回に起動するトラン
                     || CGI起動 ||           |   CGI   |  ザクションをサーバ側
                     |+----+----++<----------+---------+  に保存する。
                     |     |     |
                     |     |     |  cgictrl.cgiの[起動制御]がサーバ側に保存され
                     |     |     |  たトランザクションを判断し、適切な[画面作成
                     |     |     |  CGI]を起動する。
                     |[起動制御] |
                     |     |     |   起動
                     |+----+----++---------->+---------+
                     ||画面作成 ||           |画面作成 |->次回に起動するトラン
                     || CGI起動 ||           |   CGI   |  ザクションをサーバ側
                     |+---------++<----------+---------+  に保存する。
                     +-----+-----+
                           |
+---------+     表示       |  cgictrlを利用すると、ユーザの作成するCGIは常に[1つ
|         +<---------------+  の画面作成]、[1つの入力処理]についてのみコーディン
| Browser |                   グすればよく構造が簡潔となるため、メンテナンス性が
|         +----------------+  向上する。
+---------+  入力 & 起動   |
                           |  また上記の図では[入力処理CGI]と[画面作成CGI]が別々
                           |  のCGIの様に描かれているが、特定の画面を作成するロ
                           V  ジックと、その画面からの入力を処理するロジックを1
                           :  本のCGIにまとめる事も可能である。その場合の為に
                           :  Cgictrlクラスには、自分自身(CGI)がcgictrl.cgiから
                              [入力処理]として呼び出されたのか、[画面作成]として
                              呼び出されたのか判別するメソッドが用意されている。

                              本パッケージに同梱されているサンプルCGIも[入力処理]
                              と[画面作成]を1本のCGIにまとめるスタイルを採用して
                              いる。
